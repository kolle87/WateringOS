@namespace WateringOS_4_0.Pages

@implements IDisposable

@using WateringOS_4_0.Models 

<div class="control-section" style="padding-left:20px">

    <h5>Temperatures</h5>
    <div class="row">
        <div class="col-fixed temp">Ambient:</div>
        <div class="col-auto temp" ><span class="text" id="stat_Amb">@String.Format("{0:F1}°C", RecentValues.TempAmb)</span></div>
    </div>
    <div class="row">
        <div class="col-fixed temp">Exposed:</div>
        <div class="col-auto temp" ><span class="text" id="stat_Exp">@String.Format("{0:F1}°C", RecentValues.TempExp)</span></div>
    </div>
    <div class="row">
        <div class="col-fixed temp">Board:</div>
        <div class="col-auto temp" ><span class="text" id="stat_Board">@String.Format("{0:F1}°C", RecentValues.TempPCB)</span></div>
    </div>
    <div class="row">
        <div class="col-fixed temp">CPU:</div>
        <div class="col-auto temp" ><span class="text" id="stat_CPU">@String.Format("{0:F1}°C", RecentValues.TempCPU)</span></div>
    </div>
    <div class="row">
        <div class="col-12"><p></p></div>
    </div>

</div>

<style>
    .col-fixed.temp {
        width: 180px;
        padding-right: 12px;
        padding-top: 7px;
        text-align: right;
    }

    .col-auto.temp {
        text-align: left;
        padding-top: 7px;
    }

</style>

@code {
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(delegate { Globals.GUI.HasChanged_slow += Update; });
    }        
    private void Update()
    {
        InvokeAsync(() => StateHasChanged());
    }

    public void Dispose()
    {
        Globals.GUI.HasChanged_slow -= Update;
    }
}