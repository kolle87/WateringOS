@page "/alarms"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using System.Collections.ObjectModel;
@using System.ComponentModel;
@using WateringOS_4_0.Services;

@inject Services.JournalService LogService


<h2 style="margin-bottom:0px">Alarm List</h2>
<h6 style="margin-bottom:1.5em;">Currently active alarms</h6>

<div class="control-section">
    <SfGrid @ref="alarmlist" DataSource="@_Alarms" AllowPaging="true" AllowSorting="true">
        <GridEvents OnRecordClick="RecordClickHandler" TValue="AlarmService.Alarm"></GridEvents>
        <GridPageSettings PageCount="5" PageSize="15" PageSizes="new int[]{ 15, 50, 100 }" />
        <GridSortSettings>
            <GridSortColumns>
                <GridSortColumn Field="ID" Direction="SortDirection.Ascending" />
            </GridSortColumns>
        </GridSortSettings>
        <GridColumns>
            <GridColumn Field="" HeaderText="" Width="30" TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left" IsPrimaryKey="true">
                <Template>
                    <span class="oi oi-bell" style="color: crimson" />
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(AlarmService.Alarm.ID) HeaderText="ID" AutoFit=true TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left" IsPrimaryKey="true">
                <Template>
                    @{
                        var currentLog = (context as AlarmService.Alarm);
                        <span style="color: crimson">@currentLog.ID</span>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(AlarmService.Alarm.Name) HeaderText="Name" AutoFit=true TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left">
                <Template>
                    @{
                        var currentLog = (context as AlarmService.Alarm);
                        <span style="color: crimson">@currentLog.Name</span>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(AlarmService.Alarm.Description) HeaderText="Description" AutoFit=true TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left">
                <Template>
                    @{
                        var currentLog = (context as AlarmService.Alarm);
                        <span style="color: crimson">@currentLog.Description</span>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(AlarmService.Alarm.IsActive) HeaderText="" TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left" />
        </GridColumns>
    </SfGrid>
</div>

<style>
    .content {
        height: calc(100% - 220px);
    }

    .btn {
        height: 25px;
        width: 90px;
        padding: 0px 0px 0px 0px;
    }

    .e-grid .e-gridheader .e-sortfilter .e-fltr-icon .e-headercelldiv {
        margin: -5px 0px -5px 0px;
        padding-right: 5px;
    }

    .e-grid .e-icons {
        color: #495057;
        display: none;
    }
</style>

@code {
    private SfGrid<AlarmService.Alarm> alarmlist { get; set; }
    private ObservableCollection<AlarmService.Alarm> _Alarms;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(delegate { AlarmService.OnUpdate += Update; });
        AlarmService.RequestUpdate();
    }

    private void Update(ObservableCollection<AlarmService.Alarm> _received)
    {
        _Alarms = _received;
        StateHasChanged();
    }

    private void RecordClickHandler()
    {
        //
    }
}
